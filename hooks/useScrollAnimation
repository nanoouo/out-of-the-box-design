"use client";

import { useEffect, useState, useRef } from "react";

export function useScrollAnimation(threshold = 0.5) {
  const [animate, setAnimate] = useState(false);
  const sectionRef = useRef(null);

  // ✅ Trigger animation when section enters viewport (only once)
  useEffect(() => {
    const section = sectionRef.current;
    if (!section) return;

    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry.isIntersecting && entry.intersectionRatio >= threshold) {
          setAnimate(true);
        }
      },
      { threshold }
    );

    observer.observe(section);
    return () => observer.disconnect();
  }, [threshold]);

  // ✅ Replay animation when navigating via navbar event
  useEffect(() => {
    const handleSectionChange = (e) => {
      if (e.detail === sectionRef.current?.id) {
        setAnimate(false);
        setTimeout(() => setAnimate(true), 100); // smooth restart
      }
    };

    window.addEventListener("sectionChange", handleSectionChange);
    return () => window.removeEventListener("sectionChange", handleSectionChange);
  }, []);

  return { sectionRef, animate };
}
